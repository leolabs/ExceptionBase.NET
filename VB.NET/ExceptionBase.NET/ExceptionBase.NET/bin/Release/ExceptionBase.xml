<?xml version="1.0"?>
<doc>
<assembly>
<name>
ExceptionBase
</name>
</assembly>
<members>
<member name="P:ExceptionBase.Language.winTitle">
	<summary>
 The UserDetails window's title
 </summary>
</member><member name="P:ExceptionBase.Language.winDescription">
	<summary>
 The description, next to your app's icon 
 </summary>
</member><member name="P:ExceptionBase.Language.tabInputCaption">
	<summary>
 The title of the tab where the user can enter his description
 </summary>
</member><member name="P:ExceptionBase.Language.tabDetailedInfoCaption">
	<summary>
 The title of the tab that contains advanced error information
 </summary>
</member><member name="P:ExceptionBase.Language.appVersionCaption">
	<summary>
 The app version's title
 </summary>
</member><member name="P:ExceptionBase.Language.netVersionCaption">
	<summary>
 The framework's title
 </summary>
</member><member name="P:ExceptionBase.Language.osVersionCaption">
	<summary>
 The OS's title
 </summary>
</member><member name="P:ExceptionBase.Language.errorDetailCaption">
	<summary>
 The ExceptionMessage's title
 </summary>
</member><member name="P:ExceptionBase.Language.bSkip">
	<summary>
 Tit skip button's title
 </summary>
</member><member name="P:ExceptionBase.Language.bSend">
	<summary>
 The send button's title
 </summary>
</member><member name="T:ExceptionBase.DataType">
	<summary>
 You custom data's data type
 </summary>
	<remarks></remarks>
</member><member name="P:ExceptionBase.Server.Server">
	<summary>
 Your Exceptionbase.NET API URL
 </summary>
	<remarks>e.g. http://my.domain/api/addException, see "System Settings" in your web interface</remarks>
</member><member name="P:ExceptionBase.Server.PingIP">
	<summary>
 The IP Address that's used to check for an internet connection
 </summary>
</member><member name="P:ExceptionBase.Application.Version">
	<summary>
 Your app's version
 </summary>
</member><member name="P:ExceptionBase.Application.ID">
	<summary>
 Your app's ID
 </summary>
</member><member name="P:ExceptionBase.Application.Icon">
	<summary>
 Your app's icon, will be shown on the UserDetails Form.
 </summary>
</member><member name="P:ExceptionBase.Application.ShowErrorDetails">
	<summary>
 Shall error details be shown to the user?
 </summary>
</member><member name="P:ExceptionBase.ExceptionBase.Language">
	<summary>
 Localizable strings for the UserDetails form
 </summary>
</member><member name="P:ExceptionBase.ExceptionBase.Server">
	<summary>
 Server information
 </summary>
</member><member name="P:ExceptionBase.ExceptionBase.Application">
	<summary>
 Information of your app
 </summary>
</member><member name="P:ExceptionBase.ExceptionBase.SystemInfo">
	<summary>
 System information like the processor count, architecture, etc
 </summary>
</member><member name="P:ExceptionBase.ExceptionBase.Exception">
	<summary>
 Exception details
 </summary>
</member><member name="M:ExceptionBase.ExceptionBase.#ctor(System.String,System.Int32,System.String,System.Drawing.Image)">
	<summary>
 Creates a new ExceptionTracker that is able to gather and send information to an ExceptionBase.NET Server
 </summary>
	<param name="Server">The API's URL. Please check your System Settings page on the web interface for more information.</param>
	<param name="AppID">Your application's ID. Can be found under "Manage Applications" on the web interface</param>
	<param name="Version">Your application's version</param>
	<param name="AppIcon">Your application's icon, will be shown on the UserDetails form</param>
</member><member name="M:ExceptionBase.ExceptionBase.Track(System.Exception,System.Boolean,System.Boolean)">
	<summary>
 Sends the given error to your ExceptionBase.NET database and, if AskUser is True, asks the user to describe the error
 </summary>
	<param name="ex">The Exception that will be sent to your ExceptionBase.NET database</param>
	<param name="AskUser">Shall the user be able to give his own information concerning this error?</param>
	<param name="ThrowException">Shall an Exception be thrown if something happens in this method?</param>
</member><member name="M:ExceptionBase.ExceptionBase.GatherInformation(System.Exception)">
	<summary>
 Gathers all the relevant information from a given error
 </summary>
	<param name="ex">The error that information should be gathered from</param>
	<remarks></remarks>
</member><member name="M:ExceptionBase.ExceptionBase.Send">
	<summary>
 Sends the error to your ExceptionBase.NET database.
 </summary>
</member><member name="M:ExceptionBase.ExceptionBase.TrackCustom(System.Boolean)">
	<summary>
 Track your custom exception. You can define the values before using this method.
 </summary>
	<param name="AskUser">Shell the user be asked to provide details about the exception?</param>
</member><member name="P:ExceptionBase.My.Resources.Resources.ResourceManager">
	<summary>
  Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
</summary>
</member><member name="P:ExceptionBase.My.Resources.Resources.Culture">
	<summary>
  Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
  Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
</summary>
</member><member name="T:ExceptionBase.My.Resources.Resources">
	<summary>
  Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
</summary>
</member>
</members>
</doc>